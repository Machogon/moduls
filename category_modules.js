// ==================================================
// –ú–û–î–£–õ–ò –ö–ê–¢–ï–ì–û–†–ò–ô –î–õ–Ø –°–ö–†–ò–ü–¢–ê AUTOPART
// –§–æ—Ä–º–∞—Ç: 
//   –ö–∞–∂–¥–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –º–µ–∂–¥—É // ====== –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏
//   –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
// ==================================================

const categoryModules = {

// ==================================================
// –ö–ê–¢–ï–ì–û–†–ò–Ø: –ö–æ–º–ø–ª–µ–∫—Ç—É—é—á—ñ —Å—Ç–∞—Ä—Ç–µ—Ä—ñ–≤ —Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ñ–≤
// ==================================================
"–ö–æ–º–ø–ª–µ–∫—Ç—É—é—á—ñ —Å—Ç–∞—Ä—Ç–µ—Ä—ñ–≤ —Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ñ–≤": {
    parameters: {
        "251185": {
            "–®–∫–∏–≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞": ["—à–∫–∏–≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞", "—à–∫–∏—Ñ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞", "—à–∫–∏–≤ –≥–µ–Ω–∏—Ä–∞—Ç–æ—Ä–∞", "–º—É—Ñ—Ç–∞", "—à–∫—ñ–≤ —Ä–µ–º–µ–Ω—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞"],
            "–†–æ—Ç–æ—Ä –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞": ["—Ä–æ—Ç–æ—Ä –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞", "—Ä–æ—Ç–∞—Ä –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞"],
            "–†–æ—Ç–æ—Ä —Å—Ç–∞—Ä—Ç–µ—Ä–∞": ["—Ä–æ—Ç–æ—Ä —Å—Ç–∞—Ä—Ç–µ—Ä–∞", "—Ä–æ—Ç–∞—Ä —Å—Ç–∞—Ä—Ç–µ—Ä–∞", "—è–∫—ñ—Ä —Å—Ç–∞—Ä—Ç–µ—Ä–∞"],
            "–°—Ç–∞—Ç–æ—Ä —Å—Ç–∞—Ä—Ç–µ—Ä–∞": ["—Å—Ç–∞—Ç–æ—Ä —Å—Ç–∞—Ä—Ç–µ—Ä–∞", "–æ–±–º–æ—Ç–∫–∞ —Å—Ç–∞—Ä—Ç–µ—Ä–∞"],
            "–°—Ç–∞—Ç–æ—Ä –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞": ["—Å—Ç–∞—Ç–æ—Ä –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞", "–æ–±–º–æ—Ç–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞"],
            "–í—Ç—è–≥–∏–≤–∞—é—â–∏–µ —Ä–µ–ª–µ": ["–≤—Ç—è–≥–∏–≤–∞—é—â–∏–µ —Ä–µ–ª–µ", "–≤—Ç—è–≥–∏–≤–∞—é—â–µ–µ —Ä–µ–ª–µ", "—Ä–µ–ª–µ –≤—Ç—è–≥—É—é—á–µ —Å—Ç–∞—Ä—Ç–µ—Ä–∞", "–∫–æ–Ω—Ç–∞–∫—Ç –≤—Ç—è–≥—É—é—á–æ–≥–æ —Ä–µ–ª–µ"],
            "–ë–µ–Ω–¥–∏–∫—Å—ã": ["–±–µ–Ω–¥–∏–∫—Å", "bendix", "—à–µ—Å—Ç–µ—Ä–Ω—è –±–µ–Ω–¥–∏–∫—Å–∞ —Å—Ç–∞—Ä—Ç–µ—Ä–∞", "—Ä–æ–ª–∏–∫ –±–µ–Ω–¥–∏–∫—Å–∞ —Å—Ç–∞—Ä—Ç–µ—Ä–∞"],
            "–†–µ–≥—É–ª—è—Ç–æ—Ä—ã –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è": ["—Ä–µ–≥—É–ª—è—Ç–æ—Ä –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è", "—Ä–µ–≥—É–ª—è—Ç–æ—Ä –Ω–∞–ø—Ä—É–≥–∏"],
            "–©–µ—Ç–∫–∏ —Å—Ç–∞—Ä—Ç–µ—Ä–æ–≤": ["—â–µ—Ç–∫–∏ —Å—Ç–∞—Ä—Ç–µ—Ä–∞", "—â–µ—Ç–∫–∞ —Å—Ç–∞—Ä—Ç–µ—Ä–∞", "—â—ñ—Ç–∫–æ—Ç—Ä–∏–º–∞—á —Å—Ç–∞—Ä—Ç–µ—Ä–∞", "—â—ñ—Ç–∫–∞ —Å—Ç–∞—Ä—Ç–µ—Ä–∞"],
            "–©–µ—Ç–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤": ["—â–µ—Ç–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞", "—â–µ—Ç–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞", "—â—ñ—Ç–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞"],
            "–ú–µ—Ö–∞–Ω–∏–∑–º —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ —Ö–æ–¥–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞": ["–º–µ—Ö–∞–Ω–∏–∑–º —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ —Ö–æ–¥–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞", "–º–µ—Ö–∞–Ω–∏–∑–º —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ —Ö–æ–¥–∞"],
            "–ö–æ–ª–ª–µ–∫—Ç–æ—Ä –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞": ["–∫–æ–ª–ª–µ–∫—Ç–æ—Ä –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞"],
            "–©–µ—Ç–æ—á–Ω—ã–π —É–∑–µ–ª —Å—Ç–∞—Ä—Ç–µ—Ä–∞": ["—â–µ—Ç–æ—á–Ω—ã–π —É–∑–µ–ª —Å—Ç–∞—Ä—Ç–µ—Ä–∞", "—â—ñ—Ç–∫–æ—Ç—Ä–∏–º–∞—á —Å—Ç–∞—Ä—Ç–µ—Ä–∞"],
            "–ü–æ–¥—à–∏–ø–Ω–∏–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞": ["–ø–æ–¥—à–∏–ø–Ω–∏–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞", "–ø–æ–¥—à–∏–ø–Ω–∏–∫"],
            "–í—Ç—É–ª–∫–∞ —Å—Ç–∞—Ä—Ç–µ—Ä–∞": ["–≤—Ç—É–ª–∫–∞ —Å—Ç–∞—Ä—Ç–µ—Ä–∞"],
            "–ö—Ä—ã—à–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞": ["–∫—Ä—ã—à–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞", "–∫—Ä–∏—à–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞"],
            "–ë–æ–ª—Ç –∫—Ä–µ–ø–ª–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞": ["–±–æ–ª—Ç –∫—Ä–µ–ø–ª–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞", "—à–∞–π–±–∏ —Å—Ç–∞—Ä—Ç–µ—Ä–∞"],
            "–†–µ–¥—É–∫—Ç–æ—Ä—ã —Å—Ç–∞—Ä—Ç–µ—Ä–∞": ["—Ä–µ–¥—É–∫—Ç–æ—Ä —Å—Ç–∞—Ä—Ç–µ—Ä–∞", "—Ä–µ–¥—É–∫—Ç–æ—Ä –ø–ª–∞–Ω–µ—Ç–∞—Ä–Ω–∏–π", "–∫—ñ–ª—å—Ü–µ –º–µ—Ç–∞–ª–µ–≤–µ —Å—Ç–æ–ø–æ—Ä–Ω–µ", "–∑—É–±—á–∞—Å—Ç–µ –∫–æ–ª–µ—Å–æ —Ä–µ–¥—É–∫—Ç–æ—Ä–∞ —Å—Ç–∞—Ä—Ç–µ—Ä–∞"],
            "–©–µ—Ç–æ—á–Ω—ã–µ —É–∑–ª—ã –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞": ["—â–µ—Ç–æ—á–Ω—ã–π —É–∑–µ–ª –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞"],
            "–ö—Ä—ã—à–∫–∏ —Å—Ç–∞—Ä—Ç–µ—Ä–∞": ["–∫—Ä–∏—à–∫–∞ —Å—Ç–∞—Ä—Ç–µ—Ä–∞"],
            "–ö—Ä–æ–Ω—à—Ç–µ–π–Ω—ã –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞": ["–∫—Ä–æ–Ω—à—Ç–µ–π–Ω –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞"],
            "–î–∏–æ–¥–Ω—ã–µ –º–æ—Å—Ç—ã": ["–¥–∏–æ–¥–Ω—ã–π –º–æ—Å—Ç", "–¥–∏–æ–¥ –º–æ—Å—Ç", "–≤–∏–ø—Ä—è–º–ª—è—á –¥—ñ–æ–¥–Ω–∏–π"],
            "–í–∏–ª–∫–∞ —Å—Ç–∞—Ä—Ç–µ—Ä–∞": ["–≤–∏–ª–∫–∞ —Å—Ç–∞—Ä—Ç–µ—Ä–∞", "–≤–∞–∂—ñ–ª—å —Å—Ç–∞—Ä—Ç–µ—Ä–∞"]
        }
    },
    
    determineValues: function(title) {
        if (!window.isScriptRunning) return null;
        const result = {};
        for (const [paramId, mappings] of Object.entries(this.parameters)) {
            for (const [value, keywords] of Object.entries(mappings)) {
                for (const keyword of keywords) {
                    if (title.includes(keyword)) {
                        console.log(`üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ: "${value}" –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ ${paramId} –≤ "${title}" (–∫–ª—é—á: "${keyword}")`);
                        result[paramId] = value;
                        break;
                    }
                }
                if (result[paramId]) break;
            }
        }
        return Object.keys(result).length > 0 ? result : null;
    },
    
    process: function() {
        console.log("üîß –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–ö–æ–º–ø–ª–µ–∫—Ç—É—é—á—ñ —Å—Ç–∞—Ä—Ç–µ—Ä—ñ–≤ —Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ñ–≤'");
        const productName = document.querySelector("input[name='name']").value.toLowerCase();
        const params = this.determineValues(productName);
        if (!params) {
            console.log("‚ö† –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏.");
            window.goToNextProduct();
            return;
        }

        const paramIds = Object.keys(params);
        let index = 0;

        function addNext() {
            if (index >= paramIds.length) {
                window.goToNextProduct();
                return;
            }
            const paramId = paramIds[index];
            if (!window.checkIfParameterExists(paramId, params[paramId])) {
                window.addParameter(paramId, params[paramId], () => {
                    index++;
                    addNext();
                });
            } else {
                index++;
                addNext();
            }
        }
        addNext();
    }
},

// ==================================================
// –ö–ê–¢–ï–ì–û–†–ò–Ø: –°–∞–π–ª–µ–Ω—Ç–±–ª–æ–∫–∏ –ø–æ–¥–≤–µ—Å–∫–∏
// ==================================================
"–°–∞–π–ª–µ–Ω—Ç–±–ª–æ–∫–∏ –ø–æ–¥–≤–µ—Å–∫–∏": {
    parameters: {
        "122846": {
            "–ü–µ—Ä–µ–¥–Ω—è—è": ["–ø–µ—Ä–µ–¥–Ω—è—è", "–ø–µ—Ä–µ–¥–Ω—ñ", "front"],
            "–ó–∞–¥–Ω—è—è": ["–∑–∞–¥–Ω—è—è", "–∑–∞–¥–Ω—ñ", "rear"]
        },
        "122881": {
            "–°–ª–µ–≤–∞": ["—Å–ª–µ–≤–∞", "–ª—ñ–≤–æ—Ä—É—á", "left"],
            "–°–ø—Ä–∞–≤–∞": ["—Å–ø—Ä–∞–≤–∞", "–ø—Ä–∞–≤–æ—Ä—É—á", "right"]
        },
        "173460": {
            "–†–µ—Å—Å–æ—Ä—ã": ["—Ä–µ—Å—Å–æ—Ä—ã", "—Ä–µ—Å—Å–æ—Ä–∞"],
            "–†—ã—á–∞–≥–∏": ["—Ä—ã—á–∞–≥–∏", "—Ä—ã—á–∞–≥"],
            "–¢—è–≥–∏": ["—Ç—è–≥–∏", "—Ç—è–≥–∞"],
            "–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä—ã": ["–∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä—ã", "–∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä"],
            "–°—Ç–∞–±–∏–ª–∏–∑–∞—Ç–æ—Ä—ã": ["—Å—Ç–∞–±–∏–ª–∏–∑–∞—Ç–æ—Ä—ã", "—Å—Ç–∞–±–∏–ª–∏–∑–∞—Ç–æ—Ä"],
            "–†—É–ª–µ–≤—ã–µ —Ä–µ–π–∫–∏": ["—Ä—É–ª–µ–≤—ã–µ —Ä–µ–π–∫–∏", "—Ä—É–ª–µ–≤–∞—è —Ä–µ–π–∫–∞"],
            "–ë–∞–ª–∫–∏": ["–±–∞–ª–∫–∏", "–±–∞–ª–∫–∞"]
        },
        "173478": {
            "–ü–æ–ª–∏—É—Ä–µ—Ç–∞–Ω": ["–ø–æ–ª–∏—É—Ä–µ—Ç–∞–Ω", "–ø–æ–ª—ñ—É—Ä–µ—Ç–∞–Ω"]
        }
    },
    
    determineValues: function(title) {
        if (!window.isScriptRunning) return null;
        const result = {};
        for (const [paramId, mappings] of Object.entries(this.parameters)) {
            for (const [value, keywords] of Object.entries(mappings)) {
                for (const keyword of keywords) {
                    if (title.includes(keyword)) {
                        console.log(`üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ: "${value}" –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ ${paramId} –≤ "${title}" (–∫–ª—é—á: "${keyword}")`);
                        result[paramId] = value;
                        break;
                    }
                }
                if (result[paramId]) break;
            }
        }
        return Object.keys(result).length > 0 ? result : null;
    },
    
    process: function() {
        console.log("üîß –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–°–∞–π–ª–µ–Ω—Ç–±–ª–æ–∫–∏ –ø–æ–¥–≤–µ—Å–∫–∏'");
        const productName = document.querySelector("input[name='name']").value.toLowerCase();
        const params = this.determineValues(productName);
        if (!params) {
            console.log("‚ö† –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏.");
            window.goToNextProduct();
            return;
        }

        const paramIds = Object.keys(params);
        let index = 0;

        function addNext() {
            if (index >= paramIds.length) {
                window.goToNextProduct();
                return;
            }
            const paramId = paramIds[index];
            if (!window.checkIfParameterExists(paramId, params[paramId])) {
                window.addParameter(paramId, params[paramId], () => {
                    index++;
                    addNext();
                });
            } else {
                index++;
                addNext();
            }
        }
        addNext();
    }
},

// ==================================================
// –ö–ê–¢–ï–ì–û–†–ò–Ø: –¢–æ—Ä–º–æ–∑–Ω—ã–µ —à–ª–∞–Ω–≥–∏ –∏ —Ç—Ä—É–±–∫–∏
// ==================================================
"–¢–æ—Ä–º–æ–∑–Ω—ã–µ —à–ª–∞–Ω–≥–∏ –∏ —Ç—Ä—É–±–∫–∏": {
    parameters: {
        "122846": {
            "–ü–µ—Ä–µ–¥–Ω—è—è": ["–ø–µ—Ä–µ–¥–Ω—è—è", "–ø–µ—Ä–µ–¥–Ω—ñ", "front", "–ø–µ—Ä–µ–¥"],
            "–ó–∞–¥–Ω—è—è": ["–∑–∞–¥–Ω—è—è", "–∑–∞–¥–Ω—ñ", "rear", "–∑–∞–¥"]
        },
        "122881": {
            "–°–ª–µ–≤–∞": ["—Å–ª–µ–≤–∞", "–ª—ñ–≤–æ—Ä—É—á", "left", "–ª–µ–≤", "–ª—ñ–≤"],
            "–°–ø—Ä–∞–≤–∞": ["—Å–ø—Ä–∞–≤–∞", "–ø—Ä–∞–≤–æ—Ä—É—á", "right", "–ø—Ä–∞–≤"]
        },
        "250591": {
            "–ë–∞—Ä–∞–±–∞–Ω —Ç–æ—Ä–º–æ–∑–Ω–æ–π": ["–±–∞—Ä–∞–±–∞–Ω —Ç–æ—Ä–º–æ–∑–Ω–æ–π", "–±–∞—Ä–∞–±–∞–Ω"],
            "–†–µ–º–∫–æ–º–ø–ª–µ–∫—Ç —Å—É–ø–ø–æ—Ä—Ç–æ–≤": ["—Ä–µ–º–∫–æ–º–ø–ª–µ–∫—Ç —Å—É–ø–ø–æ—Ä—Ç–æ–≤", "—Ä–µ–º–∫–æ–º–ø–ª–µ–∫—Ç —Å—É–ø–ø–æ—Ä—Ç–∞"],
            "–†–µ–º–∫–æ–º–ø–ª–µ–∫—Ç –∫–æ–ª–æ–¥–æ–∫": ["—Ä–µ–º–∫–æ–º–ø–ª–µ–∫—Ç –∫–æ–ª–æ–¥–æ–∫", "—Ä–µ–º–∫–æ–º–ø–ª–µ–∫—Ç –∫–æ–ª–æ–¥–∫–∏"],
            "–ë–∞—á–æ–∫": ["–±–∞—á–æ–∫", "–±–∞—á–æ–∫ —Ç–æ—Ä–º–æ–∑–Ω–æ–π"],
            "–°—É–ø–ø–æ—Ä—Ç —Ç–æ—Ä–º–æ–∑–Ω–æ–π": ["—Å—É–ø–ø–æ—Ä—Ç —Ç–æ—Ä–º–æ–∑–Ω–æ–π", "—Å—É–ø–ø–æ—Ä—Ç"],
            "–î–∏—Å–∫ —Ç–æ—Ä–º–æ–∑–Ω–æ–π": ["–¥–∏—Å–∫ —Ç–æ—Ä–º–æ–∑–Ω–æ–π", "–¥–∏—Å–∫"],
            "–©–∏—Ç —Ç–æ—Ä–º–æ–∑–Ω–æ–≥–æ –¥–∏—Å–∫–∞": ["—â–∏—Ç —Ç–æ—Ä–º–æ–∑–Ω–æ–≥–æ –¥–∏—Å–∫–∞", "—â–∏—Ç"],
            "–®–ª–∞–Ω–≥–∏ —Ç–æ—Ä–º–æ–∑–Ω—ã–µ": ["—à–ª–∞–Ω–≥–∏ —Ç–æ—Ä–º–æ–∑–Ω—ã–µ", "—à–ª–∞–Ω–≥ —Ç–æ—Ä–º–æ–∑–Ω–æ–π", "—Ç–æ—Ä–º–æ–∑–Ω–æ–π —à–ª–∞–Ω–≥", "—Ç–æ—Ä–º–æ–∑–Ω—ã–π —à–ª–∞–Ω–≥", "—à–ª–∞–Ω–≥", "—à–ª–∞–Ω–≥ –≥–∞–ª—å–º—ñ–≤–Ω–∏–π", "–≥–∞–ª—å–º—ñ–≤–Ω–∏–π —à–ª–∞–Ω–≥"],
            "–¢—Ä—É–±–∫–∏ —Ç–æ—Ä–º–æ–∑–Ω—ã–µ": ["—Ç—Ä—É–±–∫–∏ —Ç–æ—Ä–º–æ–∑–Ω—ã–µ", "—Ç—Ä—É–±–∫–∞ —Ç–æ—Ä–º–æ–∑–Ω–∞—è", "—Ç—Ä—É–±–∫–∞", "—Ç—Ä—É–±–∫–∞ –≥–∞–ª—å–º—ñ–≤–Ω–∞", "—Ç—Ä—É–±–∫–∞ —Å–∏—Å—Ç–µ–º–∏ –≥–∞–ª—å–º", "—Ç–æ—Ä–º–æ–∑–Ω–∞—è —Ç—Ä—É–±–∫–∞"]
        }
    },
    
    skipSideIfNotFound: true,
    
    determineValues: function(title) {
        if (!window.isScriptRunning) return null;
        const result = {};
        for (const [paramId, mappings] of Object.entries(this.parameters)) {
            for (const [value, keywords] of Object.entries(mappings)) {
                for (const keyword of keywords) {
                    if (title.includes(keyword)) {
                        console.log(`üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ: "${value}" –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ ${paramId} –≤ "${title}" (–∫–ª—é—á: "${keyword}")`);
                        result[paramId] = value;
                        break;
                    }
                }
                if (result[paramId]) break;
            }
        }
        
        if (!result["122881"] && !this.skipSideIfNotFound) {
            result["122881"] = ["–°–ª–µ–≤–∞", "–°–ø—Ä–∞–≤–∞"];
            console.log(`‚Ñπ "–°—Ç–æ—Ä–æ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –¥–æ–±–∞–≤–ª—è–µ–º –æ–±–µ —Å—Ç–æ—Ä–æ–Ω—ã: "–°–ª–µ–≤–∞" –∏ "–°–ø—Ä–∞–≤–∞".`);
        }
        
        return Object.keys(result).length > 0 ? result : null;
    },
    
    process: function() {
        console.log("üîß –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–¢–æ—Ä–º–æ–∑–Ω—ã–µ —à–ª–∞–Ω–≥–∏ –∏ —Ç—Ä—É–±–∫–∏'");
        const productName = document.querySelector("input[name='name']").value.toLowerCase();
        const params = this.determineValues(productName);
        if (!params) {
            console.log("‚ö† –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏.");
            window.goToNextProduct();
            return;
        }

        const paramIds = Object.keys(params);
        let index = 0;

        function addNext() {
            if (index >= paramIds.length) {
                window.goToNextProduct();
                return;
            }
            const paramId = paramIds[index];
            const value = params[paramId];
            
            if (Array.isArray(value)) {
                let valueIndex = 0;
                function addValue() {
                    if (valueIndex >= value.length) {
                        index++;
                        addNext();
                        return;
                    }
                    if (!window.checkIfParameterExists(paramId, value[valueIndex])) {
                        window.addParameter(paramId, value[valueIndex], () => {
                            valueIndex++;
                            addValue();
                        });
                    } else {
                        valueIndex++;
                        addValue();
                    }
                }
                addValue();
            } else {
                if (!window.checkIfParameterExists(paramId, value)) {
                    window.addParameter(paramId, value, () => {
                        index++;
                        addNext();
                    });
                } else {
                    index++;
                    addNext();
                }
            }
        }
        addNext();
    }
}

};

// ============================================================================
// –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –î–∞—Ç—á–∏–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ
// ============================================================================
const carSensorsModule = {
    parameters: {
        "251173": { // "–í–∏–¥" ‚Äî —Ç–∏–ø –¥–∞—Ç—á–∏–∫–∞
            "–î–∞—Ç—á–∏–∫–∏ –¥–∞–≤–ª–µ–Ω–∏—è –≤ —à–∏–Ω–∞—Ö": ["–¥–∞—Ç—á–∏–∫ –¥–∞–≤–ª–µ–Ω–∏—è –≤ —à–∏–Ω–∞—Ö", "–¥–∞—Ç—á–∏–∫ —Ç–∏—Å–∫—É —à–∏–Ω"],
            "–í–æ–ª—å—Ç–º–µ—Ç—Ä—ã": ["–≤–æ–ª—å—Ç–º–µ—Ç—Ä", "–≤–æ–ª—å—Ç–º–µ—Ç—Ä—ã"],
            "–î–∞—Ç—á–∏–∫–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã": ["–¥–∞—Ç—á–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã", "–¥–∞—Ç—á–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏", "–≤–Ω–µ—à–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞"],
            "–°—á–µ—Ç—á–∏–∫–∏ –º–æ—Ç–æ—á–∞—Å–æ–≤": ["—Å—á–µ—Ç—á–∏–∫ –º–æ—Ç–æ—á–∞—Å–æ–≤", "–ª—ñ—á–∏–ª—å–Ω–∏–∫ –º–æ—Ç–æ–≥–æ–¥–∏–Ω"],
            "–î–∞—Ç—á–∏–∫–∏ –¥–∞–≤–ª–µ–Ω–∏—è –≤–æ –≤–ø—É—Å–∫–Ω–æ–º –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–µ": ["–¥–∞—Ç—á–∏–∫ –¥–∞–≤–ª–µ–Ω–∏—è –≤–æ –≤–ø—É—Å–∫–Ω–æ–º –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–µ", "–¥–∞—Ç—á–∏–∫ —Ç–∏—Å–∫—É –≤–ø—É—Å–∫–Ω–æ–≥–æ –∫–æ–ª–µ–∫—Ç–æ—Ä–∞", "–≤–ø—É—Å–∫–∞–µ–º–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞", "–Ω–∞–¥–¥—É–≤", "–≤–ø—É—Å–∫–Ω–æ–º"],
            "–î–∞—Ç—á–∏–∫–∏ –¥–∞–≤–ª–µ–Ω–∏—è –º–∞—Å–ª–∞": ["–¥–∞—Ç—á–∏–∫ –¥–∞–≤–ª–µ–Ω–∏—è –º–∞—Å–ª–∞", "–¥–∞—Ç—á–∏–∫ —Ç–∏—Å–∫—É –º–∞—Å–ª–∞", "–º–æ—Ç–æ—Ä–Ω–æ–≥–æ –º–∞—Å–ª–∞"],
            "–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —É—Ä–æ–≤–Ω—è –∑–∞—Ä—è–¥–∞ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞": ["–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —É—Ä–æ–≤–Ω—è –∑–∞—Ä—è–¥–∞ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞", "—ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞—Ä—è–¥—É –∞–∫—É–º—É–ª—è—Ç–æ—Ä–∞"],
            "–î–∞—Ç—á–∏–∫–∏ —É—Ä–æ–≤–Ω—è –æ—Ö–ª–∞–∂–¥–∞—é—â–µ–π –∂–∏–¥–∫–æ—Å—Ç–∏": ["–¥–∞—Ç—á–∏–∫ —É—Ä–æ–≤–Ω—è –æ—Ö–ª–∞–∂–¥–∞—é—â–µ–π –∂–∏–¥–∫–æ—Å—Ç–∏", "–¥–∞—Ç—á–∏–∫ —Ä—ñ–≤–Ω—è –æ—Ö–æ–ª–æ–¥–∂—É—é—á–æ—ó —Ä—ñ–¥–∏–Ω–∏", "–æ—Ö–ª–∞–∂–¥–∞—é—â–µ–π –∂–∏–¥–∫–æ—Å—Ç–∏"],
            "–î–∞—Ç—á–∏–∫–∏ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è": ["–¥–∞—Ç—á–∏–∫ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è", "–¥–∞—Ç—á–∏–∫ —É–≤—ñ–º–∫–Ω–µ–Ω–Ω—è/–≤–∏–º–∫–Ω–µ–Ω–Ω—è", "–≤—ã–∫–ª—é—á–∞—Ç–µ–ª—å", "–ø–µ—Ä–µ–º–∏–∫–∞—á"],
            "–†–∞—Å—Ö–æ–¥–æ–º–µ—Ä—ã –≤–æ–∑–¥—É—Ö–∞ (–î–ú–†–í)": ["—Ä–∞—Å—Ö–æ–¥–æ–º–µ—Ä –≤–æ–∑–¥—É—Ö–∞", "–¥–º—Ä–≤", "–≤–∏—Ç—Ä–∞—Ç–æ–º—ñ—Ä –ø–æ–≤—ñ—Ç—Ä—è", "–ø–æ–≤—ñ—Ç—Ä—è"],
            "–ö–æ–ª—å—Ü–∞ –∞–Ω—Ç–∏–±–ª–æ–∫–∏—Ä–æ–≤–æ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ê–ë–° (ABS)": ["–∫–æ–ª—å—Ü–æ –∞–±—Å", "–∫—ñ–ª—å—Ü–µ –∞–Ω—Ç–∏–±–ª–æ–∫—É–≤–∞–ª—å–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏"],
            "–î–∞—Ç—á–∏–∫–∏ –ø–∞—Ä–∫–æ–≤–∫–∏ (–ø–∞—Ä–∫—Ç—Ä–æ–Ω–∏–∫)": ["–¥–∞—Ç—á–∏–∫ –ø–∞—Ä–∫–æ–≤–∫–∏", "–ø–∞—Ä–∫—Ç—Ä–æ–Ω–∏–∫", "–ø—Ä–∏ –ø–∞—Ä–∫–æ–≤–∫–µ"],
            "–î–∞—Ç—á–∏–∫–∏ –ø–æ–ª–æ–∂–µ–Ω–∏—è –≤–∞–ª–∞ (–∫–æ–ª–µ–Ω—á–∞—Ç–æ–≥–æ, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ)": ["–¥–∞—Ç—á–∏–∫ –ø–æ–ª–æ–∂–µ–Ω–∏—è –≤–∞–ª–∞", "–¥–∞—Ç—á–∏–∫ –∫–æ–ª–µ–Ω–≤–∞–ª–∞", "–¥–∞—Ç—á–∏–∫ —Ä–∞—Å–ø—Ä–µ–¥–≤–∞–ª–∞"],
            "–î–∞—Ç—á–∏–∫–∏ —Ö–æ–ª–ª–∞": ["–¥–∞—Ç—á–∏–∫ —Ö–æ–ª–ª–∞", "–¥–∞—Ç—á–∏–∫ —Ö–æ–ª–∞"],
            "–î–∞—Ç—á–∏–∫ —É—Ä–æ–≤–Ω—è —Ç–æ–ø–ª–∏–≤–∞": ["–¥–∞—Ç—á–∏–∫ —É—Ä–æ–≤–Ω—è —Ç–æ–ø–ª–∏–≤–∞", "–¥–∞—Ç—á–∏–∫ —Ä—ñ–≤–Ω—è –ø–∞–ª–∏–≤–∞"],
            "–î–∞—Ç—á–∏–∫–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏": ["–¥–∞—Ç—á–∏–∫ —Å–∫–æ—Ä–æ—Å—Ç–∏", "–¥–∞—Ç—á–∏–∫ —à–≤–∏–¥–∫–æ—Å—Ç—ñ", "—É—á–∞—Å—Ç–æ–∫ –ø—É—Ç–∏", "—Å–∫–æ—Ä–æ—Å—Ç—å"],
            "–î–∞—Ç—á–∏–∫–∏ —É—Ä–æ–≤–Ω—è –º–∞—Å–ª–∞": ["–¥–∞—Ç—á–∏–∫ —É—Ä–æ–≤–Ω—è –º–∞—Å–ª–∞", "–¥–∞—Ç—á–∏–∫ —Ä—ñ–≤–Ω—è –º–∞—Å–ª–∞"],
            "–î–∞—Ç—á–∏–∫–∏ –ê–ë–° (ABS)": ["–¥–∞—Ç—á–∏–∫ –∞–±—Å", "–¥–∞—Ç—á–∏–∫ abs", "—á–∞—Å—Ç–æ—Ç–∞ –≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–ª–µ—Å–∞", "ABS"],
            "–î–∞—Ç—á–∏–∫–∏ –¥–∞–≤–ª–µ–Ω–∏—è –≤ –≤—ã–ø—É—Å–∫–Ω–æ–º –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–µ": ["–¥–∞—Ç—á–∏–∫ –¥–∞–≤–ª–µ–Ω–∏—è –≤ –≤—ã–ø—É—Å–∫–Ω–æ–º –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–µ", "–¥–∞—Ç—á–∏–∫ —Ç–∏—Å–∫—É –≤–∏–ø—É—Å–∫–Ω–æ–≥–æ –∫–æ–ª–µ–∫—Ç–æ—Ä–∞"],
            "–î–∞—Ç—á–∏–∫ –¥–µ—Ç–æ–Ω–∞—Ü–∏–∏": ["–¥–∞—Ç—á–∏–∫ –¥–µ—Ç–æ–Ω–∞—Ü–∏–∏", "–¥–∞—Ç—á–∏–∫ –¥–µ—Ç–æ–Ω–∞—Ü—ñ—ó"],
            "–î–∞—Ç—á–∏–∫ –ø–æ–ª–æ–∂–µ–Ω–∏—è –¥—Ä–æ—Å—Å–µ–ª—å–Ω–æ–π –∑–∞—Å–ª–æ–Ω–∫–∏": ["–¥–∞—Ç—á–∏–∫ –ø–æ–ª–æ–∂–µ–Ω–∏—è –¥—Ä–æ—Å—Å–µ–ª—å–Ω–æ–π –∑–∞—Å–ª–æ–Ω–∫–∏", "–¥–∞—Ç—á–∏–∫ –¥—Ä–æ—Å–µ–ª—å–Ω–æ—ó –∑–∞—Å–ª—ñ–Ω–∫–∏", "–¥—Ä–æ—Å—Å–µ–ª—å–Ω–æ–π"],
            "–î–∞—Ç—á–∏–∫–∏ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ —Å–∞–ª–æ–Ω–∞": ["–¥–∞—Ç—á–∏–∫ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ —Å–∞–ª–æ–Ω–∞", "–¥–∞—Ç—á–∏–∫ –∑–∞–±—Ä—É–¥–Ω–µ–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä–∞ —Å–∞–ª–æ–Ω—É"],
            "–î–∞—Ç—á–∏–∫–∏ –ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–µ–¥–∞–ª–∏ –∞–∫—Å–µ–ª–µ—Ä–∞—Ç–æ—Ä–∞": ["–¥–∞—Ç—á–∏–∫ –ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–µ–¥–∞–ª–∏ –∞–∫—Å–µ–ª–µ—Ä–∞—Ç–æ—Ä–∞", "–¥–∞—Ç—á–∏–∫ –ø–µ–¥–∞–ª—ñ –∞–∫—Å–µ–ª–µ—Ä–∞—Ç–æ—Ä–∞"],
            "–î–∞—Ç—á–∏–∫–∏ –ø–æ–ª–æ–∂–µ–Ω–∏—è —Ä—ã—á–∞–≥–∞ –ê–ö–ü–ü": ["–¥–∞—Ç—á–∏–∫ –ø–æ–ª–æ–∂–µ–Ω–∏—è —Ä—ã—á–∞–≥–∞ –∞–∫–ø–ø", "–¥–∞—Ç—á–∏–∫ –ø–æ–ª–æ–∂–µ–Ω–Ω—è –≤–∞–∂–µ–ª—è –∞–∫–ø–ø"],
            "–î–∞—Ç—á–∏–∫–∏ —É–≥–ª–∞ –ø–æ–≤–æ—Ä–æ—Ç–∞ —Ä—É–ª—è": ["–¥–∞—Ç—á–∏–∫ —É–≥–ª–∞ –ø–æ–≤–æ—Ä–æ—Ç–∞ —Ä—É–ª—è", "–¥–∞—Ç—á–∏–∫ –∫—É—Ç–∞ –ø–æ–≤–æ—Ä–æ—Ç—É –∫–µ—Ä–º–∞"],
            "–î–∞—Ç—á–∏–∫–∏ —É—Ä–æ–≤–Ω—è –≤–æ–¥—ã —Ç–æ–ø–ª–∏–≤–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞": ["–¥–∞—Ç—á–∏–∫ —É—Ä–æ–≤–Ω—è –≤–æ–¥—ã —Ç–æ–ø–ª–∏–≤–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞", "–¥–∞—Ç—á–∏–∫ —Ä—ñ–≤–Ω—è –≤–æ–¥–∏ –ø–∞–ª–∏–≤–Ω–æ–≥–æ —Ñ—ñ–ª—å—Ç—Ä–∞"],
            "–î–∞—Ç—á–∏–∫–∏ —É—Ä–æ–≤–Ω—è –∂–∏–¥–∫–æ—Å—Ç–∏ —Å—Ç–µ–∫–ª–æ–æ–º—ã–≤–∞—Ç–µ–ª—è": ["–¥–∞—Ç—á–∏–∫ —É—Ä–æ–≤–Ω—è –∂–∏–¥–∫–æ—Å—Ç–∏ —Å—Ç–µ–∫–ª–æ–æ–º—ã–≤–∞—Ç–µ–ª—è", "–¥–∞—Ç—á–∏–∫ —Ä—ñ–≤–Ω—è —Ä—ñ–¥–∏–Ω–∏ —Å–∫–ª–æ–æ–º–∏–≤–∞—á–∞"],
            "–†–µ–≥—É–ª—è—Ç–æ—Ä—ã —Ö–æ–ª–æ—Å—Ç–æ–≥–æ —Ö–æ–¥–∞": ["—Ä–µ–≥—É–ª—è—Ç–æ—Ä —Ö–æ–ª–æ—Å—Ç–æ–≥–æ —Ö–æ–¥–∞", "—Ä–µ–≥—É–ª—è—Ç–æ—Ä —Ö–æ–ª–æ—Å—Ç–æ–≥–æ —Ö–æ–¥—É"],
            "–†–µ–≥—É–ª—è—Ç–æ—Ä—ã –¥–∞–≤–ª–µ–Ω–∏—è —Ç–æ–ø–ª–∏–≤–∞": ["—Ä–µ–≥—É–ª—è—Ç–æ—Ä –¥–∞–≤–ª–µ–Ω–∏—è —Ç–æ–ø–ª–∏–≤–∞", "—Ä–µ–≥—É–ª—è—Ç–æ—Ä —Ç–∏—Å–∫—É –ø–∞–ª–∏–≤–∞"],
            "–î–∞—Ç—á–∏–∫–∏ —É—Ä–æ–≤–Ω—è –∫—É–∑–æ–≤–∞": ["–¥–∞—Ç—á–∏–∫ —É—Ä–æ–≤–Ω—è –∫—É–∑–æ–≤–∞", "–¥–∞—Ç—á–∏–∫ —Ä—ñ–≤–Ω—è –∫—É–∑–æ–≤–∞"],
            "–î–∞—Ç—á–∏–∫–∏ –¥–∞–≤–ª–µ–Ω–∏—è —Ç–æ–ø–ª–∏–≤–∞": ["–¥–∞—Ç—á–∏–∫ –¥–∞–≤–ª–µ–Ω–∏—è —Ç–æ–ø–ª–∏–≤–∞", "–¥–∞—Ç—á–∏–∫ —Ç–∏—Å–∫—É –ø–∞–ª–∏–≤–∞"]
        }
    },
    determineValues: function(title) {
        if (!isScriptRunning) return null;
        const result = {};
        for (const [paramId, mappings] of Object.entries(this.parameters)) {
            for (const [value, keywords] of Object.entries(mappings)) {
                for (const keyword of keywords) {
                    if (title.includes(keyword)) {
                        console.log(`üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ: "${value}" –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ ${paramId} –≤ "${title}" (–∫–ª—é—á: "${keyword}")`);
                        result[paramId] = value;
                        break;
                    }
                }
                if (result[paramId]) break;
            }
        }
        return Object.keys(result).length > 0 ? result : null;
    },
    process: function() {
        console.log("üîß –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–î–∞—Ç—á–∏–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ'");
        const productName = document.querySelector("input[name='name']").value.toLowerCase();
        const params = this.determineValues(productName);
        if (!params) {
            console.log("‚ö† –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏.");
            goToNextProduct();
            return;
        }
        const paramIds = Object.keys(params);
        let index = 0;
        function addNext() {
            if (index >= paramIds.length) {
                goToNextProduct();
                return;
            }
            const paramId = paramIds[index];
            if (!checkIfParameterExists(paramId, params[paramId])) {
                addParameter(paramId, params[paramId], () => {
                    index++;
                    addNext();
                });
            } else {
                index++;
                addNext();
            }
        }
        addNext();
    }
};

// ============================================================================
// –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–æ—Å—ã —Å—Ü–µ–ø–ª–µ–Ω–∏—è –∏ –ö–ü–ü, –ø—Ä–∏–≤–æ–¥—ã –ö–ü–ü, –∫—É–ª–∏—Å—ã
// ============================================================================
const clutchAndGearCablesModule = {
    parameters: {
        "251482": { // "–¢–∏–ø" ‚Äî –≤–∏–¥ —Ç—Ä–æ—Å–∞ –∏–ª–∏ –º–µ—Ö–∞–Ω–∏–∑–º–∞ –ö–ü–ü
            "–¢—Ä–æ—Å—ã —Å—Ü–µ–ø–ª–µ–Ω–∏—è": ["—Ç—Ä–æ—Å —Å—Ü–µ–ø–ª–µ–Ω–∏—è", "—Ç—Ä–æ—Å –∑—á–µ–ø–ª–µ–Ω–Ω—è", "—Ç—Ä–æ—Å–∏–∫ —Å—Ü–µ–ø–ª–µ–Ω–∏—è", "—Ç—Ä–æ—Å —Å—Ü–µ–ø–ª"],
            "–¢—Ä–æ—Å—ã –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞—á": ["—Ç—Ä–æ—Å –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞—á", "—Ç—Ä–æ—Å –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –ø–µ—Ä–µ–¥–∞—á", "—Ç—Ä–æ—Å –ö–ü–ü", "—Ç—Ä–æ—Å –∫–æ—Ä–æ–±–∫–∏ –ø–µ—Ä–µ–¥–∞—á", "—Ç—Ä–æ—Å –≤–∞–∂–µ–ª—è –ö–ü–ü"],
            "–¢—è–≥–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞—á": ["—Ç—è–≥–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞—á", "—Ç—è–≥–∞ –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –ø–µ—Ä–µ–¥–∞—á", "—Ç—è–≥–∞ –ö–ü–ü"],
            "–ö—É–ª–∏—Å—ã –≤ —Å–±–æ—Ä–µ": ["–∫—É–ª–∏—Å–∞ –≤ —Å–±–æ—Ä–µ", "–∫—É–ª—ñ—Å–∞ –≤ –∑–±–æ—Ä—ñ", "–∫—É–ª–∏—Å–∞ –ö–ü–ü", "–∫—É–ª—ñ—Å–∞ –∫–æ—Ä–æ–±–∫–∏ –ø–µ—Ä–µ–¥–∞—á"]
        }
    },
    determineValues: function(title) {
        if (!isScriptRunning) return null;
        const result = {};
        for (const [paramId, mappings] of Object.entries(this.parameters)) {
            for (const [value, keywords] of Object.entries(mappings)) {
                for (const keyword of keywords) {
                    if (title.includes(keyword)) {
                        console.log(`üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ: "${value}" –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ ${paramId} –≤ "${title}" (–∫–ª—é—á: "${keyword}")`);
                        result[paramId] = value;
                        break;
                    }
                }
                if (result[paramId]) break;
            }
        }
        return Object.keys(result).length > 0 ? result : null;
    },
    process: function() {
        console.log("üîß –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–¢—Ä–æ—Å—ã —Å—Ü–µ–ø–ª–µ–Ω–∏—è –∏ –ö–ü–ü, –ø—Ä–∏–≤–æ–¥—ã –ö–ü–ü, –∫—É–ª–∏—Å—ã'");
        const productName = document.querySelector("input[name='name']").value.toLowerCase();
        const params = this.determineValues(productName);
        if (!params) {
            console.log("‚ö† –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏.");
            goToNextProduct();
            return;
        }
        const paramIds = Object.keys(params);
        let index = 0;
        function addNext() {
            if (index >= paramIds.length) {
                goToNextProduct();
                return;
            }
            const paramId = paramIds[index];
            if (!checkIfParameterExists(paramId, params[paramId])) {
                addParameter(paramId, params[paramId], () => {
                    index++;
                    addNext();
                });
            } else {
                index++;
                addNext();
            }
        }
        addNext();
    }
};

// ============================================================================
// –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ó–µ—Ä–∫–∞–ª–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ
// ============================================================================
const carMirrorsModule = {
    parameters: {
        "198908": { // "–¢–∏–ø" ‚Äî –≤—Å–µ–≥–¥–∞ "–ë–æ–∫–æ–≤—ã–µ"
            "–ë–æ–∫–æ–≤—ã–µ": [] // –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –Ω–µ –Ω—É–∂–Ω—ã, —Ç–∞–∫ –∫–∞–∫ –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ–≥–¥–∞
        },
        "122881": { // "–°—Ç–æ—Ä–æ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏" ‚Äî –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è
            "–°–ª–µ–≤–∞": ["—Å–ª–µ–≤–∞", "–ª—ñ–≤–æ—Ä—É—á", "left", "–ª–µ–≤", "–ª—ñ–≤", "–ª–∏–≤–æ–≤"],
            "–°–ø—Ä–∞–≤–∞": ["—Å–ø—Ä–∞–≤–∞", "–ø—Ä–∞–≤–æ—Ä—É—á", "right", "–ø—Ä–∞"]
        }
    },
    stopWords: ["–Ω–∞–∫–ª–∞–¥–∫–∞", "–∞–¥–∞–ø—Ç–µ—Ä¬†YouTube", "—Ç—Ä–∏–º–∞—á", "–∫—ñ–ª—å—Ü–µ", "–ø–µ—Ä–µ–º–∏–∫–∞—á"],
    determineValues: function(title) {
        if (!isScriptRunning) return null;
        const result = {};
        const lowerTitle = title.toLowerCase();
        const hasStopWord = this.stopWords.some(stopWord => {
            const lowerStopWord = stopWord.toLowerCase();
            const words = lowerTitle.split(/\s+/);
            return words.includes(lowerStopWord);
        });
        if (!hasStopWord) {
            result["198908"] = "–ë–æ–∫–æ–≤—ã–µ";
            console.log(`üîç –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: "–ë–æ–∫–æ–≤—ã–µ" –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ 198908 –≤ "${title}".`);
        } else {
            console.log(`‚ö† –ù–∞–π–¥–µ–Ω–æ —Å—Ç–æ–ø-—Å–ª–æ–≤–æ –≤ "${title}", –ø–∞—Ä–∞–º–µ—Ç—Ä "–¢–∏–ø" (198908) –ø—Ä–æ–ø—É—â–µ–Ω.`);
        }
        const sideMappings = this.parameters["122881"];
        for (const [value, keywords] of Object.entries(sideMappings)) {
            for (const keyword of keywords) {
                if (lowerTitle.includes(keyword)) {
                    console.log(`üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ: "${value}" –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ 122881 –≤ "${title}" (–∫–ª—é—á: "${keyword}")`);
                    result["122881"] = value;
                    break;
                }
            }
            if (result["122881"]) break;
        }
        return Object.keys(result).length > 0 ? result : null;
    },
    process: function() {
        console.log("üîß –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–ó–µ—Ä–∫–∞–ª–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ'");
        const productName = document.querySelector("input[name='name']").value.toLowerCase();
        const params = this.determineValues(productName);
        if (!params) {
            console.log("‚ö† –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏.");
            goToNextProduct();
            return;
        }
        const orderedParamIds = [];
        if (params["198908"]) orderedParamIds.push("198908");
        if (params["122881"]) orderedParamIds.push("122881");
        let index = 0;
        function addNext() {
            if (index >= orderedParamIds.length) {
                goToNextProduct();
                return;
            }
            const paramId = orderedParamIds[index];
            if (!checkIfParameterExists(paramId, params[paramId])) {
                addParameter(paramId, params[paramId], () => {
                    index++;
                    addNext();
                });
            } else {
                index++;
                addNext();
            }
        }
        addNext();
    }
};

// ============================================================================
// –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ö–æ–º–ø—Ä–µ—Å—Å–æ—Ä—ã –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ
// ============================================================================
const acCompressorsModule = {
    parameters: {
        "173742": { // "–¢–∏–ø"
            "–ö–æ–º–ø—Ä–µ—Å—Å–æ—Ä—ã –≤ —Å–±–æ—Ä–µ": ["–∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä –≤ —Å–±–æ—Ä–µ", "–∫–æ–º–ø—Ä–µ—Å–æ—Ä —É –∑–±–æ—Ä—ñ", "–∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä", "–∫–æ–º–ø—Ä–µ—Å–æ—Ä"],
            "–ö–ª–∞–ø–∞–Ω—ã –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä–∞": ["–∫–ª–∞–ø–∞–Ω –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä–∞", "–∫–ª–∞–ø–∞–Ω –∫–æ–º–ø—Ä–µ—Å–æ—Ä–∞", "–∫–ª–∞–ø–∞–Ω", "–∫–ª–∞–ø–∞–Ω–∏"]
        }
    },
    determineValues: function(title) {
        if (!isScriptRunning) return null;
        const result = {};
        const lowerTitle = title.toLowerCase();
        const typeMappings = this.parameters["173742"];
        for (const [value, keywords] of Object.entries(typeMappings)) {
            for (const keyword of keywords) {
                if (lowerTitle.includes(keyword)) {
                    console.log(`üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ: "${value}" –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ 173742 –≤ "${title}" (–∫–ª—é—á: "${keyword}")`);
                    result["173742"] = value;
                    break;
                }
            }
            if (result["173742"]) break;
        }
        return Object.keys(result).length > 0 ? result : null;
    },
    process: function() {
        console.log("üîß –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–ö–æ–º–ø—Ä–µ—Å—Å–æ—Ä—ã –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ'");
        const productName = document.querySelector("input[name='name']").value.toLowerCase();
        const params = this.determineValues(productName);
        if (!params) {
            console.log("‚ö† –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏.");
            goToNextProduct();
            return;
        }
        const orderedParamIds = [];
        if (params["173742"]) orderedParamIds.push("173742");
        let index = 0;
        function addNext() {
            if (index >= orderedParamIds.length) {
                goToNextProduct();
                return;
            }
            const paramId = orderedParamIds[index];
            if (!checkIfParameterExists(paramId, params[paramId])) {
                addParameter(paramId, params[paramId], () => {
                    index++;
                    addNext();
                });
            } else {
                index++;
                addNext();
            }
        }
        addNext();
    }
};

// ============================================================================
// –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ú—É—Ñ—Ç—ã –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä–∞ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞
// ============================================================================
const acCompressorClutchesModule = {
    parameters: {
        "173742": { // "–¢–∏–ø"
            "–î–∏—Å–∫–∏ —Å—Ü–µ–ø–ª–µ–Ω–∏—è –º—É—Ñ—Ç—ã –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä–∞": ["–¥–∏—Å–∫ —Å—Ü–µ–ø–ª–µ–Ω–∏—è –º—É—Ñ—Ç—ã", "–¥–∏—Å–∫ –∑—á–µ–ø–ª–µ–Ω–Ω—è –º—É—Ñ—Ç–∏", "–¥–∏—Å–∫ –º—É—Ñ—Ç–∏"],
            "–ú—É—Ñ—Ç—ã –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä–∞": ["–º—É—Ñ—Ç–∞ –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä–∞", "–º—É—Ñ—Ç–∞ –∫–æ–º–ø—Ä–µ—Å–æ—Ä–∞", "–º—É—Ñ—Ç–∞", "—ç–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω–æ–µ"],
            "–ü–æ–¥—à–∏–ø–Ω–∏–∫–∏ –º—É—Ñ—Ç—ã –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä–∞": ["–ø–æ–¥—à–∏–ø–Ω–∏–∫ –º—É—Ñ—Ç—ã", "–ø—ñ–¥—à–∏–ø–Ω–∏–∫ –º—É—Ñ—Ç–∏", "–ø–æ–¥—à–∏–ø–Ω–∏–∫"]
        }
    },
    determineValues: function(title) {
        if (!isScriptRunning) return null;
        const result = {};
        const lowerTitle = title.toLowerCase();
        const typeMappings = this.parameters["173742"];
        for (const [value, keywords] of Object.entries(typeMappings)) {
            for (const keyword of keywords) {
                if (lowerTitle.includes(keyword)) {
                    console.log(`üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ: "${value}" –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ 173742 –≤ "${title}" (–∫–ª—é—á: "${keyword}")`);
                    result["173742"] = value;
                    break;
                }
            }
            if (result["173742"]) break;
        }
        return Object.keys(result).length > 0 ? result : null;
    },
    process: function() {
        console.log("üîß –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–ú—É—Ñ—Ç—ã –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä–∞ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞'");
        const productName = document.querySelector("input[name='name']").value.toLowerCase();
        const params = this.determineValues(productName);
        if (!params) {
            console.log("‚ö† –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏.");
            goToNextProduct();
            return;
        }
        const orderedParamIds = [];
        if (params["173742"]) orderedParamIds.push("173742");
        let index = 0;
        function addNext() {
            if (index >= orderedParamIds.length) {
                goToNextProduct();
                return;
            }
            const paramId = orderedParamIds[index];
            if (!checkIfParameterExists(paramId, params[paramId])) {
                addParameter(paramId, params[paramId], () => {
                    index++;
                    addNext();
                });
            } else {
                index++;
                addNext();
            }
        }
        addNext();
    }
};

// ============================================================================
// –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –†–µ–π–∫–∏ —Ç–æ–ø–ª–∏–≤–Ω—ã–µ, —Ç–æ–ø–ª–∏–≤–æ–ø—Ä–æ–≤–æ–¥—ã –∏ –∏—Ö —á–∞—Å—Ç–∏
// ============================================================================
const fuelRailsAndLinesModule = {
    parameters: {
        "173742": {
            "–û–±—Ä–∞—Ç–Ω—ã–µ –∫–ª–∞–ø–∞–Ω—ã": ["–æ–±—Ä–∞—Ç–Ω—ã–π –∫–ª–∞–ø–∞–Ω", "–∑–≤–æ—Ä–æ—Ç–Ω–∏–π –∫–ª–∞–ø–∞–Ω", "–æ–±—Ä–∞—Ç–Ω –∫–ª–∞–ø–∞–Ω", "–∫–ª–∞–ø–∞–Ω —Ç–æ–ø–ª–∏–≤–Ω—ã–π –æ–±—Ä–∞—Ç–Ω—ã–π", "–∫–ª–∞–ø–∞–Ω –ø–∞–ª–∏–≤–Ω–∏–π –∑–≤–æ—Ä–æ—Ç–Ω–∏–π"],
            "–†–µ–π–∫–∏ —Ç–æ–ø–ª–∏–≤–Ω—ã–µ": ["—Ä–µ–π–∫–∞ —Ç–æ–ø–ª–∏–≤–Ω–∞—è", "–ø–∞–ª–∏–≤–Ω–∞ —Ä–µ–π–∫–∞", "—Ç–æ–ø–ª–∏–≤–Ω–∞—è —Ä–µ–π–∫–∞", "—Ä–∞–º–ø–∞ —Ç–æ–ø–ª–∏–≤–Ω–∞—è", "–ø–∞–ª–∏–≤–Ω–∞ —Ä–∞–º–ø–∞", "–º–∞–≥—ñ—Å—Ç—Ä–∞–ª—å –ø–∞–ª–∏–≤–Ω–∞", "—Ç–æ–ø–ª–∏–≤–Ω–∞—è —Ä–∞–º–ø–∞"],
            "–°–æ–µ–¥–∏–Ω–∏—Ç–µ–ª–∏ —Ç–æ–ø–ª–∏–≤–Ω—ã—Ö —à–ª–∞–Ω–≥–æ–≤": ["—Å–æ–µ–¥–∏–Ω–∏—Ç–µ–ª—å —Ç–æ–ø–ª–∏–≤–Ω–æ–≥–æ —à–ª–∞–Ω–≥–∞", "–∑‚Äô—î–¥–Ω—É–≤–∞—á –ø–∞–ª–∏–≤–Ω–æ–≥–æ —à–ª–∞–Ω–≥–∞", "—Å–æ–µ–¥–∏–Ω–∏—Ç–µ–ª—å —à–ª–∞–Ω–≥–∞", "—à—Ç—É—Ü–µ—Ä –ø–∞–ª–∏–≤–Ω–æ—ó –º–∞–≥i—Å—Ç—Ä–∞–ªi", "–º—É—Ñ—Ç–∞", "–º—É—Ñ—Ç–∞ —à–≤–∏–¥–∫–æ–¥—ñ—é—á–∞"],
            "–¢–æ–ø–ª–∏–≤–Ω—ã–µ —Ç—Ä—É–±–∫–∏": ["—Ç–æ–ø–ª–∏–≤–Ω–∞—è —Ç—Ä—É–±–∫–∞", "–ø–∞–ª–∏–≤–Ω–∞ —Ç—Ä—É–±–∫–∞", "—Ç–æ–ø–ª–∏–≤–Ω —Ç—Ä—É–±–∫–∞", "—Ç—Ä—É–±–∫–∞", "—Ç—Ä—É–±–∫–∞ –ø–æ–¥–∞—á–∏", "—Ç—Ä—É–±–∫–∞ –æ–±—Ä–∞—Ç–∫–∏", "—Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥", "—Ç–æ–ø–ª–∏–≤–æ–ø—Ä–æ–≤–æ–¥", "—Ç—Ä—É–±–∫–∞ –ø–∞–ª–∏–≤–Ω–∞", "—Ç—Ä—É–±–∫–∞ —Ç–æ–ø–ª–∏–≤–Ω–∞—è –∫ —Ñ–æ—Ä—Å—É–Ω–∫–µ", "—Ç—Ä—É–±–∫–∞ —Ç–æ–ø–ª–∏–≤–Ω–∞—è (–ø–∞—É–∫)", "—Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥ –≤—ã—Å–æ–∫–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è", "—Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥ –Ω–∏–∑–∫–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è"],
            "–®–ª–∞–Ω–≥–∏ –æ–±—Ä–∞—Ç–∫–∏": ["—à–ª–∞–Ω–≥ –æ–±—Ä–∞—Ç–∫–∏", "—à–ª–∞–Ω–≥ –∑–≤–æ—Ä–æ—Ç–∫–∏", "–æ–±—Ä–∞—Ç–Ω—ã–π —à–ª–∞–Ω–≥", "—à–ª–∞–Ω–≥ –ø–∞–ª–∏–≤–Ω–∏–π", "—à–ª–∞–Ω–≥ –ø–∞–ª–∏–≤–Ω–∏–π –≥—É–º–æ–≤–∏–π", "—à–ª–∞–Ω–≥ —Ç–æ–ø–ª–∏–≤–Ω—ã–π", "—à–ª–∞–Ω–≥ —Ç–æ–ø–ª–∏–≤–Ω—ã–π (–æ–±—Ä–∞—Ç–∫–∞)", "—à–ª–∞–Ω–≥, —É—Ç–µ—á–∫–∞ —Ç–æ–ø–ª–∏–≤–∞"],
            "–†–µ–≥—É–ª—è—Ç–æ—Ä—ã –¥–∞–≤–ª–µ–Ω–∏—è —Ç–æ–ø–ª–∏–≤–∞": ["—Ä–µ–≥—É–ª—è—Ç–æ—Ä –¥–∞–≤–ª–µ–Ω–∏—è —Ç–æ–ø–ª–∏–≤–∞", "—Ä–µ–≥—É–ª—è—Ç–æ—Ä —Ç–∏—Å–∫—É –ø–∞–ª–∏–≤–∞", "—Ä–µ–≥—É–ª—è—Ç–æ—Ä –¥–∞–≤–ª–µ–Ω–∏—è", "–∫–ª–∞–ø–∞–Ω —Ç–∏—Å–∫—É", "–∫–ª–∞–ø–∞–Ω –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–∞–≤–ª–µ–Ω–∏—è"],
            "–†–µ–¥—É–∫—Ü–∏–æ–Ω–Ω—ã–µ –∫–ª–∞–ø–∞–Ω—ã": ["—Ä–µ–¥—É–∫—Ü–∏–æ–Ω–Ω—ã–π –∫–ª–∞–ø–∞–Ω", "—Ä–µ–¥—É–∫—Ü—ñ–π–Ω–∏–π –∫–ª–∞–ø–∞–Ω", "—Ä–µ–¥—É–∫—Ü –∫–ª–∞–ø–∞–Ω", "–∫–ª–∞–ø–∞–Ω –ø–∞–ª–∏–≤–Ω–æ—ó –º–∞–≥—ñ—Å—Ç—Ä–∞–ª—ñ"],
            "–¢—Ä–æ—Å—ã –∞–∫—Å–µ–ª–µ—Ä–∞—Ç–æ—Ä–∞": ["—Ç—Ä–æ—Å –∞–∫—Å–µ–ª–µ—Ä–∞—Ç–æ—Ä–∞", "—Ç—Ä–æ—Å –∞–∫—Å–µ–ª–µ—Ä–∞—Ç–æ—Ä—É", "—Ç—Ä–æ—Å –≥–∞–∑–∞"]
        }
    },
    determineValues: function(title) {
        if (!isScriptRunning) return null;
        const result = {};
        const lowerTitle = title.toLowerCase();
        const typeMappings = this.parameters["173742"];
        for (const [value, keywords] of Object.entries(typeMappings)) {
            for (const keyword of keywords) {
                if (lowerTitle.includes(keyword)) {
                    console.log(`üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ: "${value}" –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ 173742 –≤ "${title}" (–∫–ª—é—á: "${keyword}")`);
                    result["173742"] = value;
                    break;
                }
            }
            if (result["173742"]) break;
        }
        return Object.keys(result).length > 0 ? result : null;
    },
    process: function() {
        console.log("üîß –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–†–µ–π–∫–∏ —Ç–æ–ø–ª–∏–≤–Ω—ã–µ, —Ç–æ–ø–ª–∏–≤–æ–ø—Ä–æ–≤–æ–¥—ã –∏ –∏—Ö —á–∞—Å—Ç–∏'");
        const productName = document.querySelector("input[name='name']").value.toLowerCase();
        const params = this.determineValues(productName);
        if (!params) {
            console.log("‚ö† –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏.");
            goToNextProduct();
            return;
        }
        const orderedParamIds = [];
        if (params["173742"]) orderedParamIds.push("173742");
        let index = 0;
        function addNext() {
            if (index >= orderedParamIds.length) {
                goToNextProduct();
                return;
            }
            const paramId = orderedParamIds[index];
            if (!checkIfParameterExists(paramId, params[paramId])) {
                addParameter(paramId, params[paramId], () => {
                    index++;
                    addNext();
                });
            } else {
                index++;
                addNext();
            }
        }
        addNext();
    }
};

// ============================================================================
// –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢–æ–ø–ª–∏–≤–Ω—ã–µ —Ñ–æ—Ä—Å—É–Ω–∫–∏
// ============================================================================
const fuelInjectorsModule = {
    parameters: {
        "173742": { // "–¢–∏–ø"
            "–í—Ç—É–ª–∫–∏": ["–≤—Ç—É–ª–∫–∞", "–≤—Ç—É–ª–∫–∏"],
            "–ö—Ä–µ–ø–µ–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã": ["–∫—Ä–µ–ø–µ–∂–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç", "–∫—Ä—ñ–ø–∏–ª—å–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç", "–∫—Ä–µ–ø–µ–∂", "–∫—Ä—ñ–ø–ª–µ–Ω–Ω—è"],
            "–†–∞—Å–ø—ã–ª–∏—Ç–µ–ª–∏ —Ñ–æ—Ä—Å—É–Ω–æ–∫": ["—Ä–∞—Å–ø—ã–ª–∏—Ç–µ–ª—å —Ñ–æ—Ä—Å—É–Ω–∫–∏", "—Ä–æ–∑–ø–∏–ª—é–≤–∞—á —Ñ–æ—Ä—Å—É–Ω–∫–∏", "—Ä–∞—Å–ø—ã–ª–∏—Ç–µ–ª—å", "—Ä–æ–∑–ø–∏–ª—é–≤–∞—á"],
            "–†–µ–º–∫–æ–º–ø–ª–µ–∫—Ç—ã": ["—Ä–µ–º–∫–æ–º–ø–ª–µ–∫—Ç", "—Ä–µ–º–∫–æ–º–ø–ª–µ–∫—Ç–∏", "—Ä–µ–º–æ–Ω—Ç–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Ç"],
            "–£–ø–ª–æ—Ç–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–ª—å—Ü–∞": ["—É–ø–ª–æ—Ç–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∫–æ–ª—å—Ü–æ", "—É—â—ñ–ª—å–Ω—é–≤–∞–ª—å–Ω–µ –∫—ñ–ª—å—Ü–µ", "—É–ø–ª–æ—Ç–Ω–∏—Ç–µ–ª—å", "—É—â—ñ–ª—å–Ω—é–≤–∞—á"],
            "–§–æ—Ä—Å—É–Ω–∫–∏": ["—Ñ–æ—Ä—Å—É–Ω–∫–∞", "—Ñ–æ—Ä—Å—É–Ω–∫–∏"]
        }
    },
    determineValues: function(title) {
        if (!isScriptRunning) return null;
        const result = {};
        const lowerTitle = title.toLowerCase();
        const typeMappings = this.parameters["173742"];
        for (const [value, keywords] of Object.entries(typeMappings)) {
            for (const keyword of keywords) {
                if (lowerTitle.includes(keyword)) {
                    console.log(`üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ: "${value}" –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ 173742 –≤ "${title}" (–∫–ª—é—á: "${keyword}")`);
                    result["173742"] = value;
                    break;
                }
            }
            if (result["173742"]) break;
        }
        return Object.keys(result).length > 0 ? result : null;
    },
    process: function() {
        console.log("üîß –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–¢–æ–ø–ª–∏–≤–Ω—ã–µ —Ñ–æ—Ä—Å—É–Ω–∫–∏'");
        const productName = document.querySelector("input[name='name']").value.toLowerCase();
        const params = this.determineValues(productName);
        if (!params) {
            console.log("‚ö† –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏.");
            goToNextProduct();
            return;
        }
        const orderedParamIds = [];
        if (params["173742"]) orderedParamIds.push("173742");
        let index = 0;
        function addNext() {
            if (index >= orderedParamIds.length) {
                goToNextProduct();
                return;
            }
            const paramId = orderedParamIds[index];
            if (!checkIfParameterExists(paramId, params[paramId])) {
                addParameter(paramId, params[paramId], () => {
                    index++;
                    addNext();
                });
            } else {
                index++;
                addNext();
            }
        }
        addNext();
    }
};

// ============================================================================
// –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ü–æ–¥—à–∏–ø–Ω–∏–∫–∏ –ø–æ–¥–≤–µ—Å–Ω—ã–µ –∏ –ø–æ–¥—à–∏–ø–Ω–∏–∫–∏ —Ç—Ä–∞–Ω—Å–º–∏—Å—Å–∏–∏
// ============================================================================
const suspensionAndTransmissionBearingsModule = {
    parameters: {
        "251485": { // "–¢–∏–ø"
            "–ü–æ–¥—à–∏–ø–Ω–∏–∫–∏ –ö–ü–ü": ["–ø–æ–¥—à–∏–ø–Ω–∏–∫ –∫–ø–ø", "–ø–æ–¥—à–∏–ø–Ω–∏–∫ –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –≤–∞–ª–∞ –∫–ø–ø", "–ø–æ–¥—à–∏–ø–Ω–∏–∫ –∫–æ—Ä–æ–±–∫–∏", "–øi–¥—à–∏–ø–Ω–∏–∫ –∫–ø–ø"],
            "–ü–æ–¥—à–∏–ø–Ω–∏–∫–∏ –ø–æ–¥–≤–µ—Å–Ω—ã–µ": ["–æ–ø–æ—Ä–∞ –∫–∞—Ä–¥–∞–Ω–Ω–æ–≥–æ –≤–∞–ª–∞", "–ø–æ–¥—à–∏–ø–Ω–∏–∫ –ø–æ–¥–≤—ñ—Å–Ω–∏–π", "–ø—ñ–¥—à–∏–ø–Ω–∏–∫ –ø—ñ–¥–≤—ñ—Å–Ω–∏–π", "—Ü–µ–Ω—Ç—Ä–∏—Ä—É—é—â–∞—è –≤—Ç—É–ª–∫–∞, –ø—Ä–æ–¥–æ–ª—å–Ω—ã–π –≤–∞–ª", "–ø–æ–¥–≤–µ—Å–∫–∞, –∫–∞—Ä–¥–∞–Ω–Ω—ã–π –≤–∞–ª", "–ø–æ–¥—à–∏–ø–Ω–∏–∫ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –ø–æ–¥—à–∏–ø–Ω–∏–∫ –∫–∞—Ä–¥–∞–Ω–Ω–æ–≥–æ –≤–∞–ª–∞", "–ø–æ–¥—à–∏–ø–Ω–∏–∫ –ø–æ–¥–≤–µ—Å–Ω–æ–π", "–ø–æ–¥—à–∏–ø–Ω–∏–∫ —à–∞—Ä–∏–∫–æ–≤—ã–π", "–ø—ñ–¥—à–∏–ø–Ω–∏–∫ –∫—É–ª—å–∫–æ–≤–∏–π", "–ø–æ–¥—à–∏–ø–Ω–∏–∫ –∏–≥–æ–ª—å—á–∞—Ç—ã–π", "–ø—ñ–¥—à–∏–ø–Ω–∏–∫ –≥–æ–ª—á–∞—Å—Ç–∏–π", "–ø–æ–¥—à–∏–ø–Ω–∏–∫ —Ä–æ–ª–∏–∫–æ–≤—ã–π", "–ø–æ–¥—à–∏–ø–Ω–∏–∫ –∫–æ—Ä–ø—É—Å–Ω—ã–π", "–ø–æ–¥—à–∏–ø–Ω–∏–∫ –º–∏–Ω–∏–∞—Ç—é—Ä–Ω—ã–π", "–ø–æ–¥—à–∏–ø–Ω–∏–∫ —Å–∞–º–æ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—â–∏–π—Å—è", "–ø–æ–¥—à–∏–ø–Ω–∏–∫ —Ä–∞–¥–∏–∞–ª—å–Ω—ã–π", "–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å –ø–æ–¥—à–∏–ø–Ω–∏–∫–æ–º", "—É–∑–µ–ª –ø–æ–¥—à–∏–ø–Ω–∏–∫–æ–≤—ã–π —Ñ–ª–∞–Ω—Ü–µ–≤—ã–π", "–ø–æ–¥—à–∏–ø–Ω–∏–∫ –∫–æ–ª–µ—Å–∞, –∫–æ–º–ø–ª–µ–∫—Ç", "–æ–ø–æ—Ä–Ω—ã–π –ø–æ–¥—à–∏–ø–Ω–∏–∫ –ø—Ä–∏–≤–æ–¥–Ω–æ–≥–æ –≤–∞–ª–∞"]
        }
    },
    determineValues: function(title) {
        if (!isScriptRunning) return null;
        const result = {};
        const lowerTitle = title.toLowerCase();
        const typeMappings = this.parameters["251485"];
        for (const [value, keywords] of Object.entries(typeMappings)) {
            for (const keyword of keywords) {
                if (lowerTitle.includes(keyword.toLowerCase())) {
                    console.log(`üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ: "${value}" –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ 251485 –≤ "${title}" (–∫–ª—é—á: "${keyword}")`);
                    result["251485"] = value;
                    break;
                }
            }
            if (result["251485"]) break;
        }
        return Object.keys(result).length > 0 ? result : null;
    },
    process: function() {
        console.log("üîß –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–ü–æ–¥—à–∏–ø–Ω–∏–∫–∏ –ø–æ–¥–≤–µ—Å–Ω—ã–µ –∏ –ø–æ–¥—à–∏–ø–Ω–∏–∫–∏ —Ç—Ä–∞–Ω—Å–º–∏—Å—Å–∏–∏'");
        const productName = document.querySelector("input[name='name']").value.toLowerCase();
        const params = this.determineValues(productName);
        if (!params) {
            console.log("‚ö† –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏.");
            goToNextProduct();
            return;
        }
        const orderedParamIds = [];
        if (params["251485"]) orderedParamIds.push("251485");
        let index = 0;
        function addNext() {
            if (index >= orderedParamIds.length) {
                goToNextProduct();
                return;
            }
            const paramId = initiation[index];
            if (!checkIfParameterExists(paramId, params[paramId])) {
                addParameter(paramId, params[paramId], () => {
                    index++;
                    addNext();
                });
            } else {
                index++;
                addNext();
            }
        }
        addNext();
    }
};


// –≠–∫—Å–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
if (typeof module !== 'undefined' && module.exports) {
    module.exports = categoryModules;
} else {
    window.categoryModules = categoryModules;
}
